// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="image_inverter,hls_ip_2014_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module image_inverter (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 5'b00000;
parameter    ap_ST_st2_fsm_1 = 5'b1;
parameter    ap_ST_pp0_stg0_fsm_2 = 5'b10;
parameter    ap_ST_st11_fsm_3 = 5'b11;
parameter    ap_ST_st12_fsm_4 = 5'b100;
parameter    ap_ST_pp1_stg0_fsm_5 = 5'b101;
parameter    ap_ST_st19_fsm_6 = 5'b110;
parameter    ap_ST_st20_fsm_7 = 5'b111;
parameter    ap_ST_st21_fsm_8 = 5'b1000;
parameter    ap_ST_st22_fsm_9 = 5'b1001;
parameter    ap_ST_st23_fsm_10 = 5'b1010;
parameter    ap_ST_st24_fsm_11 = 5'b1011;
parameter    ap_ST_st25_fsm_12 = 5'b1100;
parameter    ap_ST_st26_fsm_13 = 5'b1101;
parameter    ap_ST_st27_fsm_14 = 5'b1110;
parameter    ap_ST_st28_fsm_15 = 5'b1111;
parameter    ap_ST_st29_fsm_16 = 5'b10000;
parameter    ap_ST_st30_fsm_17 = 5'b10001;
parameter    ap_ST_st31_fsm_18 = 5'b10010;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_ID_WIDTH = 1;
parameter    C_M_AXI_MEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_MEM_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_TARGET_ADDR = 0;
parameter    C_M_AXI_MEM_USER_VALUE = 0;
parameter    C_M_AXI_MEM_PROT_VALUE = 0;
parameter    C_M_AXI_MEM_CACHE_VALUE = 3;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_FFFFFFF0 = 32'b11111111111111111111111111110000;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv5_F = 5'b1111;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_MEM_WSTRB_WIDTH = (C_M_AXI_MEM_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1 : 0] m_axi_mem_AWADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1 : 0] m_axi_mem_AWID;
output  [7:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [C_M_AXI_MEM_AWUSER_WIDTH - 1 : 0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [C_M_AXI_MEM_DATA_WIDTH - 1 : 0] m_axi_mem_WDATA;
output  [C_M_AXI_MEM_WSTRB_WIDTH - 1 : 0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [C_M_AXI_MEM_ID_WIDTH - 1 : 0] m_axi_mem_WID;
output  [C_M_AXI_MEM_WUSER_WIDTH - 1 : 0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1 : 0] m_axi_mem_ARADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1 : 0] m_axi_mem_ARID;
output  [7:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [C_M_AXI_MEM_ARUSER_WIDTH - 1 : 0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [C_M_AXI_MEM_DATA_WIDTH - 1 : 0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [C_M_AXI_MEM_ID_WIDTH - 1 : 0] m_axi_mem_RID;
input  [C_M_AXI_MEM_RUSER_WIDTH - 1 : 0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [C_M_AXI_MEM_ID_WIDTH - 1 : 0] m_axi_mem_BID;
input  [C_M_AXI_MEM_BUSER_WIDTH - 1 : 0] m_axi_mem_BUSER;
output   interrupt;

wire    ap_start;
reg    ap_done;
reg    ap_idle;
reg   [4:0] ap_CS_fsm = 5'b00000;
reg    ap_ready;
wire   [31:0] ptrInput;
wire   [31:0] ptrOutput;
wire   [31:0] pixelsN;
wire    image_inverter_AXILiteS_s_axi_U_ap_dummy_ce;
reg    mem_AWVALID;
wire    mem_AWREADY;
reg   [31:0] mem_AWADDR;
wire   [0:0] mem_AWID;
reg   [31:0] mem_AWLEN;
wire   [2:0] mem_AWSIZE;
wire   [1:0] mem_AWBURST;
wire   [1:0] mem_AWLOCK;
wire   [3:0] mem_AWCACHE;
wire   [2:0] mem_AWPROT;
wire   [3:0] mem_AWQOS;
wire   [3:0] mem_AWREGION;
wire   [0:0] mem_AWUSER;
reg    mem_WVALID;
wire    mem_WREADY;
reg   [31:0] mem_WDATA;
wire   [3:0] mem_WSTRB;
wire    mem_WLAST;
wire   [0:0] mem_WID;
wire   [0:0] mem_WUSER;
reg    mem_ARVALID;
wire    mem_ARREADY;
reg   [31:0] mem_ARADDR;
wire   [0:0] mem_ARID;
reg   [31:0] mem_ARLEN;
wire   [2:0] mem_ARSIZE;
wire   [1:0] mem_ARBURST;
wire   [1:0] mem_ARLOCK;
wire   [3:0] mem_ARCACHE;
wire   [2:0] mem_ARPROT;
wire   [3:0] mem_ARQOS;
wire   [3:0] mem_ARREGION;
wire   [0:0] mem_ARUSER;
wire    mem_RVALID;
reg    mem_RREADY;
wire   [31:0] mem_RDATA;
wire    mem_RLAST;
wire   [0:0] mem_RID;
wire   [0:0] mem_RUSER;
wire   [1:0] mem_RRESP;
wire    mem_BVALID;
reg    mem_BREADY;
wire   [1:0] mem_BRESP;
wire   [0:0] mem_BID;
wire   [0:0] mem_BUSER;
wire    image_inverter_mem_m_axi_U_ap_dummy_ce;
reg   [4:0] indvar_reg_167;
reg   [4:0] ap_reg_ppstg_indvar_reg_167_pp0_it1;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] exitcond1_reg_447;
reg   [0:0] isIter0_reg_456;
reg    ap_sig_ioackin_mem_ARREADY;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_447_pp0_it5;
reg    ap_sig_bdd_230;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg   [4:0] ap_reg_ppstg_indvar_reg_167_pp0_it2;
reg   [4:0] ap_reg_ppstg_indvar_reg_167_pp0_it3;
reg   [4:0] ap_reg_ppstg_indvar_reg_167_pp0_it4;
reg   [4:0] ap_reg_ppstg_indvar_reg_167_pp0_it5;
reg   [4:0] ap_reg_ppstg_indvar_reg_167_pp0_it6;
reg   [4:0] indvar3_reg_190;
reg   [31:0] reg_213;
wire   [31:0] wordInput_1_fu_228_p1;
reg   [31:0] wordInput_1_reg_421;
wire   [31:0] wordOutput_1_fu_242_p1;
reg   [31:0] wordOutput_1_reg_427;
wire   [31:0] tmp_fu_246_p2;
reg   [31:0] tmp_reg_433;
reg   [31:0] mem_addr_reg_441;
wire   [0:0] tmp_2_fu_252_p2;
wire   [0:0] exitcond1_fu_272_p2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_447_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_447_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_447_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_447_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_447_pp0_it6;
wire   [4:0] indvar_next_fu_278_p2;
reg   [4:0] indvar_next_reg_451;
wire   [0:0] isIter0_fu_284_p2;
wire   [4:0] j_1_fu_301_p2;
reg   [4:0] j_1_reg_463;
reg   [3:0] buf_addr_reg_468;
wire   [0:0] exitcond_fu_295_p2;
reg   [31:0] mem_addr_1_reg_473;
wire   [0:0] exitcond5_fu_334_p2;
reg   [0:0] exitcond5_reg_478;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond5_reg_478_pp1_it1;
reg   [0:0] isIter_reg_492;
reg   [0:0] ap_reg_ppstg_isIter_reg_492_pp1_it1;
reg    ap_sig_ioackin_mem_AWREADY;
reg    ap_sig_ioackin_mem_WREADY;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg    ap_reg_ppiten_pp1_it3 = 1'b0;
reg    ap_reg_ppiten_pp1_it4 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond5_reg_478_pp1_it4;
reg   [0:0] is_last_reg_496;
reg   [0:0] ap_reg_ppstg_is_last_reg_496_pp1_it4;
reg    ap_sig_bdd_343;
reg    ap_reg_ppiten_pp1_it5 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond5_reg_478_pp1_it2;
reg   [0:0] ap_reg_ppstg_exitcond5_reg_478_pp1_it3;
wire   [4:0] indvar_next4_fu_340_p2;
wire   [0:0] isIter_fu_351_p2;
wire   [0:0] is_last_fu_357_p2;
reg   [0:0] ap_reg_ppstg_is_last_reg_496_pp1_it1;
reg   [0:0] ap_reg_ppstg_is_last_reg_496_pp1_it2;
reg   [0:0] ap_reg_ppstg_is_last_reg_496_pp1_it3;
wire   [31:0] buf_q0;
reg   [31:0] buf_load_1_reg_500;
wire   [31:0] i_2_fu_363_p2;
wire   [31:0] tmp_1_fu_374_p2;
reg   [31:0] tmp_1_reg_513;
wire   [0:0] tmp_6_fu_369_p2;
wire   [31:0] tmp_11_fu_389_p2;
reg   [31:0] tmp_11_reg_524;
wire   [31:0] i_3_fu_394_p2;
reg   [31:0] i_3_reg_529;
wire   [31:0] tmp_9_fu_400_p2;
reg   [31:0] tmp_9_reg_534;
reg    image_inverter_ap_rst;
reg   [3:0] buf_address0;
reg    buf_ce0;
reg    buf_we0;
reg   [31:0] buf_d0;
reg   [31:0] i_reg_155;
reg   [4:0] indvar_phi_fu_171_p4;
reg   [4:0] j_reg_179;
reg   [31:0] i_1_reg_201;
wire   [63:0] tmp_13_fu_290_p1;
wire   [63:0] tmp_s_fu_307_p1;
wire   [63:0] tmp_14_fu_346_p1;
wire   [63:0] tmp_4_fu_262_p1;
wire   [63:0] tmp_8_fu_317_p1;
wire   [63:0] tmp_5_fu_379_p1;
wire   [63:0] tmp_12_fu_406_p1;
reg    ap_reg_ioackin_mem_ARREADY = 1'b0;
reg    ap_reg_ioackin_mem_AWREADY = 1'b0;
reg    ap_reg_ioackin_mem_WREADY = 1'b0;
wire   [31:0] tmp_10_fu_327_p2;
wire   [29:0] wordInput_fu_218_p4;
wire   [29:0] wordOutput_fu_232_p4;
wire   [31:0] tmp_3_fu_257_p2;
wire   [31:0] tmp_7_fu_312_p2;
reg   [4:0] ap_NS_fsm;
reg    ap_sig_bdd_457;
reg    ap_sig_bdd_472;
reg    ap_sig_bdd_481;


image_inverter_AXILiteS_s_axi #(
    .C_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
image_inverter_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .ACLK_EN( image_inverter_AXILiteS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .ptrInput( ptrInput ),
    .ptrOutput( ptrOutput ),
    .pixelsN( pixelsN )
);

image_inverter_mem_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_ID_WIDTH( C_M_AXI_MEM_ID_WIDTH ),
    .C_ADDR_WIDTH( C_M_AXI_MEM_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_M_AXI_MEM_DATA_WIDTH ),
    .C_AWUSER_WIDTH( C_M_AXI_MEM_AWUSER_WIDTH ),
    .C_ARUSER_WIDTH( C_M_AXI_MEM_ARUSER_WIDTH ),
    .C_WUSER_WIDTH( C_M_AXI_MEM_WUSER_WIDTH ),
    .C_RUSER_WIDTH( C_M_AXI_MEM_RUSER_WIDTH ),
    .C_BUSER_WIDTH( C_M_AXI_MEM_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_MEM_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_MEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MEM_CACHE_VALUE ))
image_inverter_mem_m_axi_U(
    .AWVALID( m_axi_mem_AWVALID ),
    .AWREADY( m_axi_mem_AWREADY ),
    .AWADDR( m_axi_mem_AWADDR ),
    .AWID( m_axi_mem_AWID ),
    .AWLEN( m_axi_mem_AWLEN ),
    .AWSIZE( m_axi_mem_AWSIZE ),
    .AWBURST( m_axi_mem_AWBURST ),
    .AWLOCK( m_axi_mem_AWLOCK ),
    .AWCACHE( m_axi_mem_AWCACHE ),
    .AWPROT( m_axi_mem_AWPROT ),
    .AWQOS( m_axi_mem_AWQOS ),
    .AWREGION( m_axi_mem_AWREGION ),
    .AWUSER( m_axi_mem_AWUSER ),
    .WVALID( m_axi_mem_WVALID ),
    .WREADY( m_axi_mem_WREADY ),
    .WDATA( m_axi_mem_WDATA ),
    .WSTRB( m_axi_mem_WSTRB ),
    .WLAST( m_axi_mem_WLAST ),
    .WID( m_axi_mem_WID ),
    .WUSER( m_axi_mem_WUSER ),
    .ARVALID( m_axi_mem_ARVALID ),
    .ARREADY( m_axi_mem_ARREADY ),
    .ARADDR( m_axi_mem_ARADDR ),
    .ARID( m_axi_mem_ARID ),
    .ARLEN( m_axi_mem_ARLEN ),
    .ARSIZE( m_axi_mem_ARSIZE ),
    .ARBURST( m_axi_mem_ARBURST ),
    .ARLOCK( m_axi_mem_ARLOCK ),
    .ARCACHE( m_axi_mem_ARCACHE ),
    .ARPROT( m_axi_mem_ARPROT ),
    .ARQOS( m_axi_mem_ARQOS ),
    .ARREGION( m_axi_mem_ARREGION ),
    .ARUSER( m_axi_mem_ARUSER ),
    .RVALID( m_axi_mem_RVALID ),
    .RREADY( m_axi_mem_RREADY ),
    .RDATA( m_axi_mem_RDATA ),
    .RLAST( m_axi_mem_RLAST ),
    .RID( m_axi_mem_RID ),
    .RUSER( m_axi_mem_RUSER ),
    .RRESP( m_axi_mem_RRESP ),
    .BVALID( m_axi_mem_BVALID ),
    .BREADY( m_axi_mem_BREADY ),
    .BRESP( m_axi_mem_BRESP ),
    .BID( m_axi_mem_BID ),
    .BUSER( m_axi_mem_BUSER ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .ACLK_EN( image_inverter_mem_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( mem_ARVALID ),
    .I_ARREADY( mem_ARREADY ),
    .I_ARADDR( mem_ARADDR ),
    .I_ARID( mem_ARID ),
    .I_ARLEN( mem_ARLEN ),
    .I_ARSIZE( mem_ARSIZE ),
    .I_ARLOCK( mem_ARLOCK ),
    .I_ARCACHE( mem_ARCACHE ),
    .I_ARQOS( mem_ARQOS ),
    .I_ARPROT( mem_ARPROT ),
    .I_ARUSER( mem_ARUSER ),
    .I_ARBURST( mem_ARBURST ),
    .I_ARREGION( mem_ARREGION ),
    .I_RVALID( mem_RVALID ),
    .I_RREADY( mem_RREADY ),
    .I_RDATA( mem_RDATA ),
    .I_RID( mem_RID ),
    .I_RUSER( mem_RUSER ),
    .I_RRESP( mem_RRESP ),
    .I_RLAST( mem_RLAST ),
    .I_AWVALID( mem_AWVALID ),
    .I_AWREADY( mem_AWREADY ),
    .I_AWADDR( mem_AWADDR ),
    .I_AWID( mem_AWID ),
    .I_AWLEN( mem_AWLEN ),
    .I_AWSIZE( mem_AWSIZE ),
    .I_AWLOCK( mem_AWLOCK ),
    .I_AWCACHE( mem_AWCACHE ),
    .I_AWQOS( mem_AWQOS ),
    .I_AWPROT( mem_AWPROT ),
    .I_AWUSER( mem_AWUSER ),
    .I_AWBURST( mem_AWBURST ),
    .I_AWREGION( mem_AWREGION ),
    .I_WVALID( mem_WVALID ),
    .I_WREADY( mem_WREADY ),
    .I_WDATA( mem_WDATA ),
    .I_WID( mem_WID ),
    .I_WUSER( mem_WUSER ),
    .I_WLAST( mem_WLAST ),
    .I_WSTRB( mem_WSTRB ),
    .I_BVALID( mem_BVALID ),
    .I_BREADY( mem_BREADY ),
    .I_BRESP( mem_BRESP ),
    .I_BID( mem_BID ),
    .I_BUSER( mem_BUSER )
);

image_inverter_buf #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
buf_U(
    .clk( ap_clk ),
    .reset( image_inverter_ap_rst ),
    .address0( buf_address0 ),
    .ce0( buf_ce0 ),
    .we0( buf_we0 ),
    .d0( buf_d0 ),
    .q0( buf_q0 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n == 1'b0) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_mem_ARREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_mem_ARREADY
    if (ap_rst_n == 1'b0) begin
        ap_reg_ioackin_mem_ARREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_ST_st21_fsm_8 == ap_CS_fsm) & ~(ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY)) | ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))))) begin
            ap_reg_ioackin_mem_ARREADY <= ap_const_logic_0;
        end else if ((((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == mem_ARREADY) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) | ((ap_ST_st21_fsm_8 == ap_CS_fsm) & (ap_const_logic_1 == mem_ARREADY)))) begin
            ap_reg_ioackin_mem_ARREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_mem_AWREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_mem_AWREADY
    if (ap_rst_n == 1'b0) begin
        ap_reg_ioackin_mem_AWREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_ST_st28_fsm_15 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) | ((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5)))))) begin
            ap_reg_ioackin_mem_AWREADY <= ap_const_logic_0;
        end else if ((((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & (ap_const_logic_1 == mem_AWREADY) & ~(ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))) | ((ap_ST_st28_fsm_15 == ap_CS_fsm) & (ap_const_logic_1 == mem_AWREADY)))) begin
            ap_reg_ioackin_mem_AWREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_mem_WREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_mem_WREADY
    if (ap_rst_n == 1'b0) begin
        ap_reg_ioackin_mem_WREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_ST_st28_fsm_15 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) | ((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5)))))) begin
            ap_reg_ioackin_mem_WREADY <= ap_const_logic_0;
        end else if ((((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5)) & (ap_const_logic_1 == mem_WREADY)) | ((ap_ST_st28_fsm_15 == ap_CS_fsm) & (ap_const_logic_1 == mem_WREADY)))) begin
            ap_reg_ioackin_mem_WREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) & ~(ap_const_lv1_0 == exitcond1_fu_272_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_2_fu_252_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) & (ap_const_lv1_0 == exitcond1_fu_272_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_2_fu_252_p2)) | ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) & ~(ap_const_lv1_0 == exitcond1_fu_272_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_2_fu_252_p2))) begin
            ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))) & ~(ap_const_lv1_0 == exitcond5_fu_334_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st11_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_295_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))) & (ap_const_lv1_0 == exitcond5_fu_334_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st11_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_295_p2)) | ((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))) & ~(ap_const_lv1_0 == exitcond5_fu_334_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))))) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end
    end
end

/// ap_reg_ppiten_pp1_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it3
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))))) begin
            ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
        end
    end
end

/// ap_reg_ppiten_pp1_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it4
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))))) begin
            ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
        end
    end
end

/// ap_reg_ppiten_pp1_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it5
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))))) begin
            ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
        end else if (((ap_ST_st11_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_295_p2))) begin
            ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_2_fu_252_p2))) begin
        i_1_reg_201 <= i_reg_155;
    end else if (((ap_ST_st31_fsm_18 == ap_CS_fsm) & ~(mem_BVALID == ap_const_logic_0))) begin
        i_1_reg_201 <= i_3_reg_529;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st19_fsm_6 == ap_CS_fsm)) begin
        i_reg_155 <= i_2_fu_363_p2;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_155 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))) & (ap_const_lv1_0 == exitcond5_fu_334_p2))) begin
        indvar3_reg_190 <= indvar_next4_fu_340_p2;
    end else if (((ap_ST_st11_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_295_p2))) begin
        indvar3_reg_190 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond1_reg_447 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))))) begin
        indvar_reg_167 <= indvar_next_reg_451;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_2_fu_252_p2))) begin
        indvar_reg_167 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) & ~(ap_const_lv1_0 == exitcond1_fu_272_p2))) begin
        j_reg_179 <= ap_const_lv5_0;
    end else if ((ap_ST_st12_fsm_4 == ap_CS_fsm)) begin
        j_reg_179 <= j_1_reg_463;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))))) begin
        ap_reg_ppstg_exitcond1_reg_447_pp0_it1 <= exitcond1_reg_447;
        ap_reg_ppstg_exitcond1_reg_447_pp0_it2 <= ap_reg_ppstg_exitcond1_reg_447_pp0_it1;
        ap_reg_ppstg_exitcond1_reg_447_pp0_it3 <= ap_reg_ppstg_exitcond1_reg_447_pp0_it2;
        ap_reg_ppstg_exitcond1_reg_447_pp0_it4 <= ap_reg_ppstg_exitcond1_reg_447_pp0_it3;
        ap_reg_ppstg_exitcond1_reg_447_pp0_it5 <= ap_reg_ppstg_exitcond1_reg_447_pp0_it4;
        ap_reg_ppstg_exitcond1_reg_447_pp0_it6 <= ap_reg_ppstg_exitcond1_reg_447_pp0_it5;
        ap_reg_ppstg_indvar_reg_167_pp0_it1 <= indvar_reg_167;
        ap_reg_ppstg_indvar_reg_167_pp0_it2 <= ap_reg_ppstg_indvar_reg_167_pp0_it1;
        ap_reg_ppstg_indvar_reg_167_pp0_it3 <= ap_reg_ppstg_indvar_reg_167_pp0_it2;
        ap_reg_ppstg_indvar_reg_167_pp0_it4 <= ap_reg_ppstg_indvar_reg_167_pp0_it3;
        ap_reg_ppstg_indvar_reg_167_pp0_it5 <= ap_reg_ppstg_indvar_reg_167_pp0_it4;
        ap_reg_ppstg_indvar_reg_167_pp0_it6 <= ap_reg_ppstg_indvar_reg_167_pp0_it5;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))))) begin
        ap_reg_ppstg_exitcond5_reg_478_pp1_it1 <= exitcond5_reg_478;
        ap_reg_ppstg_exitcond5_reg_478_pp1_it2 <= ap_reg_ppstg_exitcond5_reg_478_pp1_it1;
        ap_reg_ppstg_exitcond5_reg_478_pp1_it3 <= ap_reg_ppstg_exitcond5_reg_478_pp1_it2;
        ap_reg_ppstg_exitcond5_reg_478_pp1_it4 <= ap_reg_ppstg_exitcond5_reg_478_pp1_it3;
        ap_reg_ppstg_isIter_reg_492_pp1_it1 <= isIter_reg_492;
        ap_reg_ppstg_is_last_reg_496_pp1_it1 <= is_last_reg_496;
        ap_reg_ppstg_is_last_reg_496_pp1_it2 <= ap_reg_ppstg_is_last_reg_496_pp1_it1;
        ap_reg_ppstg_is_last_reg_496_pp1_it3 <= ap_reg_ppstg_is_last_reg_496_pp1_it2;
        ap_reg_ppstg_is_last_reg_496_pp1_it4 <= ap_reg_ppstg_is_last_reg_496_pp1_it3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st11_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_295_p2))) begin
        buf_addr_reg_468 <= tmp_s_fu_307_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))) & (ap_const_lv1_0 == exitcond5_reg_478))) begin
        buf_load_1_reg_500 <= buf_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))))) begin
        exitcond1_reg_447 <= exitcond1_fu_272_p2;
        indvar_next_reg_451 <= indvar_next_fu_278_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))))) begin
        exitcond5_reg_478 <= exitcond5_fu_334_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st21_fsm_8 == ap_CS_fsm) & ~(ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY))) begin
        i_3_reg_529 <= i_3_fu_394_p2;
        tmp_11_reg_524 <= tmp_11_fu_389_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) & (ap_const_lv1_0 == exitcond1_fu_272_p2))) begin
        isIter0_reg_456 <= isIter0_fu_284_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))) & (ap_const_lv1_0 == exitcond5_fu_334_p2))) begin
        isIter_reg_492 <= isIter_fu_351_p2;
        is_last_reg_496 <= is_last_fu_357_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st11_fsm_3 == ap_CS_fsm)) begin
        j_1_reg_463 <= j_1_fu_301_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st11_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_295_p2))) begin
        mem_addr_1_reg_473 <= tmp_8_fu_317_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_2_fu_252_p2))) begin
        mem_addr_reg_441 <= tmp_4_fu_262_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_447_pp0_it5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) | ((ap_ST_st26_fsm_13 == ap_CS_fsm) & ~(mem_RVALID == ap_const_logic_0)))) begin
        reg_213 <= mem_RDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st20_fsm_7 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_6_fu_369_p2))) begin
        tmp_1_reg_513 <= tmp_1_fu_374_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st27_fsm_14 == ap_CS_fsm)) begin
        tmp_9_reg_534 <= tmp_9_fu_400_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        tmp_reg_433 <= tmp_fu_246_p2;
        wordInput_1_reg_421[0] <= wordInput_1_fu_228_p1[0];
wordInput_1_reg_421[1] <= wordInput_1_fu_228_p1[1];
wordInput_1_reg_421[2] <= wordInput_1_fu_228_p1[2];
wordInput_1_reg_421[3] <= wordInput_1_fu_228_p1[3];
wordInput_1_reg_421[4] <= wordInput_1_fu_228_p1[4];
wordInput_1_reg_421[5] <= wordInput_1_fu_228_p1[5];
wordInput_1_reg_421[6] <= wordInput_1_fu_228_p1[6];
wordInput_1_reg_421[7] <= wordInput_1_fu_228_p1[7];
wordInput_1_reg_421[8] <= wordInput_1_fu_228_p1[8];
wordInput_1_reg_421[9] <= wordInput_1_fu_228_p1[9];
wordInput_1_reg_421[10] <= wordInput_1_fu_228_p1[10];
wordInput_1_reg_421[11] <= wordInput_1_fu_228_p1[11];
wordInput_1_reg_421[12] <= wordInput_1_fu_228_p1[12];
wordInput_1_reg_421[13] <= wordInput_1_fu_228_p1[13];
wordInput_1_reg_421[14] <= wordInput_1_fu_228_p1[14];
wordInput_1_reg_421[15] <= wordInput_1_fu_228_p1[15];
wordInput_1_reg_421[16] <= wordInput_1_fu_228_p1[16];
wordInput_1_reg_421[17] <= wordInput_1_fu_228_p1[17];
wordInput_1_reg_421[18] <= wordInput_1_fu_228_p1[18];
wordInput_1_reg_421[19] <= wordInput_1_fu_228_p1[19];
wordInput_1_reg_421[20] <= wordInput_1_fu_228_p1[20];
wordInput_1_reg_421[21] <= wordInput_1_fu_228_p1[21];
wordInput_1_reg_421[22] <= wordInput_1_fu_228_p1[22];
wordInput_1_reg_421[23] <= wordInput_1_fu_228_p1[23];
wordInput_1_reg_421[24] <= wordInput_1_fu_228_p1[24];
wordInput_1_reg_421[25] <= wordInput_1_fu_228_p1[25];
wordInput_1_reg_421[26] <= wordInput_1_fu_228_p1[26];
wordInput_1_reg_421[27] <= wordInput_1_fu_228_p1[27];
wordInput_1_reg_421[28] <= wordInput_1_fu_228_p1[28];
wordInput_1_reg_421[29] <= wordInput_1_fu_228_p1[29];
        wordOutput_1_reg_427[0] <= wordOutput_1_fu_242_p1[0];
wordOutput_1_reg_427[1] <= wordOutput_1_fu_242_p1[1];
wordOutput_1_reg_427[2] <= wordOutput_1_fu_242_p1[2];
wordOutput_1_reg_427[3] <= wordOutput_1_fu_242_p1[3];
wordOutput_1_reg_427[4] <= wordOutput_1_fu_242_p1[4];
wordOutput_1_reg_427[5] <= wordOutput_1_fu_242_p1[5];
wordOutput_1_reg_427[6] <= wordOutput_1_fu_242_p1[6];
wordOutput_1_reg_427[7] <= wordOutput_1_fu_242_p1[7];
wordOutput_1_reg_427[8] <= wordOutput_1_fu_242_p1[8];
wordOutput_1_reg_427[9] <= wordOutput_1_fu_242_p1[9];
wordOutput_1_reg_427[10] <= wordOutput_1_fu_242_p1[10];
wordOutput_1_reg_427[11] <= wordOutput_1_fu_242_p1[11];
wordOutput_1_reg_427[12] <= wordOutput_1_fu_242_p1[12];
wordOutput_1_reg_427[13] <= wordOutput_1_fu_242_p1[13];
wordOutput_1_reg_427[14] <= wordOutput_1_fu_242_p1[14];
wordOutput_1_reg_427[15] <= wordOutput_1_fu_242_p1[15];
wordOutput_1_reg_427[16] <= wordOutput_1_fu_242_p1[16];
wordOutput_1_reg_427[17] <= wordOutput_1_fu_242_p1[17];
wordOutput_1_reg_427[18] <= wordOutput_1_fu_242_p1[18];
wordOutput_1_reg_427[19] <= wordOutput_1_fu_242_p1[19];
wordOutput_1_reg_427[20] <= wordOutput_1_fu_242_p1[20];
wordOutput_1_reg_427[21] <= wordOutput_1_fu_242_p1[21];
wordOutput_1_reg_427[22] <= wordOutput_1_fu_242_p1[22];
wordOutput_1_reg_427[23] <= wordOutput_1_fu_242_p1[23];
wordOutput_1_reg_427[24] <= wordOutput_1_fu_242_p1[24];
wordOutput_1_reg_427[25] <= wordOutput_1_fu_242_p1[25];
wordOutput_1_reg_427[26] <= wordOutput_1_fu_242_p1[26];
wordOutput_1_reg_427[27] <= wordOutput_1_fu_242_p1[27];
wordOutput_1_reg_427[28] <= wordOutput_1_fu_242_p1[28];
wordOutput_1_reg_427[29] <= wordOutput_1_fu_242_p1[29];
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm or tmp_6_fu_369_p2)
begin
    if (((ap_ST_st20_fsm_7 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_369_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or tmp_6_fu_369_p2)
begin
    if (((ap_ST_st20_fsm_7 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_369_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_mem_ARREADY assign process. ///
always @ (mem_ARREADY or ap_reg_ioackin_mem_ARREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_mem_ARREADY)) begin
        ap_sig_ioackin_mem_ARREADY = mem_ARREADY;
    end else begin
        ap_sig_ioackin_mem_ARREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_mem_AWREADY assign process. ///
always @ (mem_AWREADY or ap_reg_ioackin_mem_AWREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_mem_AWREADY)) begin
        ap_sig_ioackin_mem_AWREADY = mem_AWREADY;
    end else begin
        ap_sig_ioackin_mem_AWREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_mem_WREADY assign process. ///
always @ (mem_WREADY or ap_reg_ioackin_mem_WREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_mem_WREADY)) begin
        ap_sig_ioackin_mem_WREADY = mem_WREADY;
    end else begin
        ap_sig_ioackin_mem_WREADY = ap_const_logic_1;
    end
end

/// buf_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it7 or buf_addr_reg_468 or ap_reg_ppiten_pp1_it0 or tmp_13_fu_290_p1 or tmp_s_fu_307_p1 or tmp_14_fu_346_p1)
begin
    if ((ap_ST_st12_fsm_4 == ap_CS_fsm)) begin
        buf_address0 = buf_addr_reg_468;
    end else if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7))) begin
        buf_address0 = tmp_13_fu_290_p1;
    end else if (((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        buf_address0 = tmp_14_fu_346_p1;
    end else if ((ap_ST_st11_fsm_3 == ap_CS_fsm)) begin
        buf_address0 = tmp_s_fu_307_p1;
    end else begin
        buf_address0 = 'bx;
    end
end

/// buf_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_447 or isIter0_reg_456 or ap_sig_ioackin_mem_ARREADY or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_230 or ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp0_it7 or ap_reg_ppiten_pp1_it0 or ap_reg_ppstg_exitcond5_reg_478_pp1_it1 or ap_reg_ppstg_isIter_reg_492_pp1_it1 or ap_sig_ioackin_mem_AWREADY or ap_sig_ioackin_mem_WREADY or ap_reg_ppiten_pp1_it2 or ap_sig_bdd_343 or ap_reg_ppiten_pp1_it5)
begin
    if (((ap_ST_st11_fsm_3 == ap_CS_fsm) | ((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5)))) | (ap_ST_st12_fsm_4 == ap_CS_fsm) | ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))))) begin
        buf_ce0 = ap_const_logic_1;
    end else begin
        buf_ce0 = ap_const_logic_0;
    end
end

/// buf_d0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it7 or reg_213 or tmp_10_fu_327_p2)
begin
    if ((ap_ST_st12_fsm_4 == ap_CS_fsm)) begin
        buf_d0 = tmp_10_fu_327_p2;
    end else if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7))) begin
        buf_d0 = reg_213;
    end else begin
        buf_d0 = 'bx;
    end
end

/// buf_we0 assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_447 or isIter0_reg_456 or ap_sig_ioackin_mem_ARREADY or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_230 or ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp0_it7 or ap_reg_ppstg_exitcond1_reg_447_pp0_it6)
begin
    if (((ap_ST_st12_fsm_4 == ap_CS_fsm) | ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_447_pp0_it6)))) begin
        buf_we0 = ap_const_logic_1;
    end else begin
        buf_we0 = ap_const_logic_0;
    end
end

/// indvar_phi_fu_171_p4 assign process. ///
always @ (ap_CS_fsm or indvar_reg_167 or exitcond1_reg_447 or ap_reg_ppiten_pp0_it1 or indvar_next_reg_451)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond1_reg_447 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        indvar_phi_fu_171_p4 = indvar_next_reg_451;
    end else begin
        indvar_phi_fu_171_p4 = indvar_reg_167;
    end
end

/// mem_ARADDR assign process. ///
always @ (ap_CS_fsm or mem_addr_reg_441 or tmp_5_fu_379_p1 or ap_reg_ioackin_mem_ARREADY or ap_sig_bdd_457)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_mem_ARREADY)) begin
        if ((ap_ST_st21_fsm_8 == ap_CS_fsm)) begin
            mem_ARADDR = tmp_5_fu_379_p1;
        end else if (ap_sig_bdd_457) begin
            mem_ARADDR = mem_addr_reg_441;
        end else begin
            mem_ARADDR = 'bx;
        end
    end else begin
        mem_ARADDR = 'bx;
    end
end

/// mem_ARLEN assign process. ///
always @ (ap_CS_fsm or ap_reg_ioackin_mem_ARREADY or ap_sig_bdd_457)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_mem_ARREADY)) begin
        if ((ap_ST_st21_fsm_8 == ap_CS_fsm)) begin
            mem_ARLEN = ap_const_lv32_1;
        end else if (ap_sig_bdd_457) begin
            mem_ARLEN = ap_const_lv32_10;
        end else begin
            mem_ARLEN = 'bx;
        end
    end else begin
        mem_ARLEN = 'bx;
    end
end

/// mem_ARVALID assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_447 or isIter0_reg_456 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_230 or ap_reg_ppiten_pp0_it6 or ap_reg_ioackin_mem_ARREADY)
begin
    if ((((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & (ap_const_logic_0 == ap_reg_ioackin_mem_ARREADY)) | ((ap_ST_st21_fsm_8 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_mem_ARREADY)))) begin
        mem_ARVALID = ap_const_logic_1;
    end else begin
        mem_ARVALID = ap_const_logic_0;
    end
end

/// mem_AWADDR assign process. ///
always @ (ap_CS_fsm or mem_addr_1_reg_473 or tmp_12_fu_406_p1 or ap_reg_ioackin_mem_AWREADY or ap_sig_bdd_472)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_mem_AWREADY)) begin
        if ((ap_ST_st28_fsm_15 == ap_CS_fsm)) begin
            mem_AWADDR = tmp_12_fu_406_p1;
        end else if (ap_sig_bdd_472) begin
            mem_AWADDR = mem_addr_1_reg_473;
        end else begin
            mem_AWADDR = 'bx;
        end
    end else begin
        mem_AWADDR = 'bx;
    end
end

/// mem_AWLEN assign process. ///
always @ (ap_CS_fsm or ap_reg_ioackin_mem_AWREADY or ap_sig_bdd_472)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_mem_AWREADY)) begin
        if ((ap_ST_st28_fsm_15 == ap_CS_fsm)) begin
            mem_AWLEN = ap_const_lv32_1;
        end else if (ap_sig_bdd_472) begin
            mem_AWLEN = ap_const_lv32_10;
        end else begin
            mem_AWLEN = 'bx;
        end
    end else begin
        mem_AWLEN = 'bx;
    end
end

/// mem_AWVALID assign process. ///
always @ (ap_CS_fsm or ap_reg_ppstg_exitcond5_reg_478_pp1_it1 or ap_reg_ppstg_isIter_reg_492_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_bdd_343 or ap_reg_ppiten_pp1_it5 or ap_reg_ioackin_mem_AWREADY)
begin
    if ((((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5)) & (ap_const_logic_0 == ap_reg_ioackin_mem_AWREADY)) | ((ap_ST_st28_fsm_15 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_mem_AWREADY)))) begin
        mem_AWVALID = ap_const_logic_1;
    end else begin
        mem_AWVALID = ap_const_logic_0;
    end
end

/// mem_BREADY assign process. ///
always @ (ap_CS_fsm or mem_BVALID or ap_reg_ppstg_exitcond5_reg_478_pp1_it1 or ap_reg_ppstg_isIter_reg_492_pp1_it1 or ap_sig_ioackin_mem_AWREADY or ap_sig_ioackin_mem_WREADY or ap_reg_ppiten_pp1_it2 or ap_reg_ppstg_exitcond5_reg_478_pp1_it4 or ap_reg_ppstg_is_last_reg_496_pp1_it4 or ap_sig_bdd_343 or ap_reg_ppiten_pp1_it5)
begin
    if ((((ap_ST_st31_fsm_18 == ap_CS_fsm) & ~(mem_BVALID == ap_const_logic_0)) | ((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it4) & ~(ap_const_lv1_0 == ap_reg_ppstg_is_last_reg_496_pp1_it4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5)))))) begin
        mem_BREADY = ap_const_logic_1;
    end else begin
        mem_BREADY = ap_const_logic_0;
    end
end

/// mem_RREADY assign process. ///
always @ (ap_CS_fsm or mem_RVALID or exitcond1_reg_447 or isIter0_reg_456 or ap_sig_ioackin_mem_ARREADY or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_reg_447_pp0_it5 or ap_sig_bdd_230 or ap_reg_ppiten_pp0_it6)
begin
    if ((((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_447_pp0_it5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)))) | ((ap_ST_st26_fsm_13 == ap_CS_fsm) & ~(mem_RVALID == ap_const_logic_0)))) begin
        mem_RREADY = ap_const_logic_1;
    end else begin
        mem_RREADY = ap_const_logic_0;
    end
end

/// mem_WDATA assign process. ///
always @ (ap_CS_fsm or buf_load_1_reg_500 or tmp_9_reg_534 or ap_reg_ioackin_mem_WREADY or ap_sig_bdd_481)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_mem_WREADY)) begin
        if ((ap_ST_st28_fsm_15 == ap_CS_fsm)) begin
            mem_WDATA = tmp_9_reg_534;
        end else if (ap_sig_bdd_481) begin
            mem_WDATA = buf_load_1_reg_500;
        end else begin
            mem_WDATA = 'bx;
        end
    end else begin
        mem_WDATA = 'bx;
    end
end

/// mem_WVALID assign process. ///
always @ (ap_CS_fsm or ap_reg_ppstg_exitcond5_reg_478_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_bdd_343 or ap_reg_ppiten_pp1_it5 or ap_reg_ioackin_mem_WREADY)
begin
    if ((((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5)) & (ap_const_logic_0 == ap_reg_ioackin_mem_WREADY)) | ((ap_ST_st28_fsm_15 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_mem_WREADY)))) begin
        mem_WVALID = ap_const_logic_1;
    end else begin
        mem_WVALID = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or mem_RVALID or mem_BVALID or ap_reg_ppiten_pp0_it0 or exitcond1_reg_447 or isIter0_reg_456 or ap_sig_ioackin_mem_ARREADY or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_230 or ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp0_it7 or tmp_2_fu_252_p2 or exitcond1_fu_272_p2 or exitcond_fu_295_p2 or exitcond5_fu_334_p2 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_reg_ppstg_exitcond5_reg_478_pp1_it1 or ap_reg_ppstg_isIter_reg_492_pp1_it1 or ap_sig_ioackin_mem_AWREADY or ap_sig_ioackin_mem_WREADY or ap_reg_ppiten_pp1_it2 or ap_reg_ppiten_pp1_it4 or ap_sig_bdd_343 or ap_reg_ppiten_pp1_it5 or tmp_6_fu_369_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == tmp_2_fu_252_p2)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st20_fsm_7;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if ((~((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) & ~(ap_const_lv1_0 == exitcond1_fu_272_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if ((((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6))) & ~(ap_const_lv1_0 == exitcond1_fu_272_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st11_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st11_fsm_3 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_295_p2)) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_4;
            end
        end
        ap_ST_st12_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_3;
        end
        ap_ST_pp1_stg0_fsm_5 : 
        begin
            if ((~((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it4)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))) & ~(ap_const_lv1_0 == exitcond5_fu_334_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_5;
            end else if ((((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) | (ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5))) & ~(ap_const_lv1_0 == exitcond5_fu_334_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_st19_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_5;
            end
        end
        ap_ST_st19_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st20_fsm_7 : 
        begin
            if ((ap_const_lv1_0 == tmp_6_fu_369_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_8;
            end
        end
        ap_ST_st21_fsm_8 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_mem_ARREADY)) begin
                ap_NS_fsm = ap_ST_st22_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_8;
            end
        end
        ap_ST_st22_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_10;
        end
        ap_ST_st23_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_11;
        end
        ap_ST_st24_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_12;
        end
        ap_ST_st25_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_13;
        end
        ap_ST_st26_fsm_13 : 
        begin
            if (~(mem_RVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st27_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_13;
            end
        end
        ap_ST_st27_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_15;
        end
        ap_ST_st28_fsm_15 : 
        begin
            if (~((ap_const_logic_0 == ap_sig_ioackin_mem_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_mem_WREADY))) begin
                ap_NS_fsm = ap_ST_st29_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_st28_fsm_15;
            end
        end
        ap_ST_st29_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_17;
        end
        ap_ST_st30_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_18;
        end
        ap_ST_st31_fsm_18 : 
        begin
            if (~(mem_BVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st20_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st31_fsm_18;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_230 assign process. ///
always @ (mem_RVALID or ap_reg_ppstg_exitcond1_reg_447_pp0_it5)
begin
    ap_sig_bdd_230 = ((mem_RVALID == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_447_pp0_it5));
end

/// ap_sig_bdd_343 assign process. ///
always @ (mem_BVALID or ap_reg_ppstg_exitcond5_reg_478_pp1_it4 or ap_reg_ppstg_is_last_reg_496_pp1_it4)
begin
    ap_sig_bdd_343 = ((mem_BVALID == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it4) & ~(ap_const_lv1_0 == ap_reg_ppstg_is_last_reg_496_pp1_it4));
end

/// ap_sig_bdd_457 assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_447 or isIter0_reg_456 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_230 or ap_reg_ppiten_pp0_it6)
begin
    ap_sig_bdd_457 = ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond1_reg_447 == ap_const_lv1_0) & ~(ap_const_lv1_0 == isIter0_reg_456) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_230 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6)));
end

/// ap_sig_bdd_472 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppstg_exitcond5_reg_478_pp1_it1 or ap_reg_ppstg_isIter_reg_492_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_bdd_343 or ap_reg_ppiten_pp1_it5)
begin
    ap_sig_bdd_472 = ((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_isIter_reg_492_pp1_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5)));
end

/// ap_sig_bdd_481 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppstg_exitcond5_reg_478_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_bdd_343 or ap_reg_ppiten_pp1_it5)
begin
    ap_sig_bdd_481 = ((ap_ST_pp1_stg0_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_478_pp1_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_343 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it5)));
end
assign exitcond1_fu_272_p2 = (indvar_phi_fu_171_p4 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond5_fu_334_p2 = (indvar3_reg_190 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond_fu_295_p2 = (j_reg_179 == ap_const_lv5_10? 1'b1: 1'b0);
assign i_2_fu_363_p2 = (i_reg_155 + ap_const_lv32_10);
assign i_3_fu_394_p2 = (i_1_reg_201 + ap_const_lv32_1);
assign image_inverter_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

/// image_inverter_ap_rst assign process. ///
always @ (ap_rst_n)
begin
    image_inverter_ap_rst = ~ap_rst_n;
end
assign image_inverter_mem_m_axi_U_ap_dummy_ce = ap_const_logic_1;
assign indvar_next4_fu_340_p2 = (indvar3_reg_190 + ap_const_lv5_1);
assign indvar_next_fu_278_p2 = (indvar_phi_fu_171_p4 + ap_const_lv5_1);
assign isIter0_fu_284_p2 = (indvar_phi_fu_171_p4 == ap_const_lv5_0? 1'b1: 1'b0);
assign isIter_fu_351_p2 = (indvar3_reg_190 == ap_const_lv5_0? 1'b1: 1'b0);
assign is_last_fu_357_p2 = (indvar3_reg_190 == ap_const_lv5_F? 1'b1: 1'b0);
assign j_1_fu_301_p2 = (j_reg_179 + ap_const_lv5_1);
assign mem_ARBURST = ap_const_lv2_0;
assign mem_ARCACHE = ap_const_lv4_0;
assign mem_ARID = ap_const_lv1_0;
assign mem_ARLOCK = ap_const_lv2_0;
assign mem_ARPROT = ap_const_lv3_0;
assign mem_ARQOS = ap_const_lv4_0;
assign mem_ARREGION = ap_const_lv4_0;
assign mem_ARSIZE = ap_const_lv3_0;
assign mem_ARUSER = ap_const_lv1_0;
assign mem_AWBURST = ap_const_lv2_0;
assign mem_AWCACHE = ap_const_lv4_0;
assign mem_AWID = ap_const_lv1_0;
assign mem_AWLOCK = ap_const_lv2_0;
assign mem_AWPROT = ap_const_lv3_0;
assign mem_AWQOS = ap_const_lv4_0;
assign mem_AWREGION = ap_const_lv4_0;
assign mem_AWSIZE = ap_const_lv3_0;
assign mem_AWUSER = ap_const_lv1_0;
assign mem_WID = ap_const_lv1_0;
assign mem_WLAST = ap_const_logic_0;
assign mem_WSTRB = ap_const_lv4_F;
assign mem_WUSER = ap_const_lv1_0;
assign tmp_10_fu_327_p2 = (buf_q0 ^ ap_const_lv32_FFFFFFFF);
assign tmp_11_fu_389_p2 = (i_1_reg_201 + wordOutput_1_reg_427);
assign tmp_12_fu_406_p1 = $unsigned(tmp_11_reg_524);
assign tmp_13_fu_290_p1 = $unsigned(ap_reg_ppstg_indvar_reg_167_pp0_it6);
assign tmp_14_fu_346_p1 = $unsigned(indvar3_reg_190);
assign tmp_1_fu_374_p2 = (i_1_reg_201 + wordInput_1_reg_421);
assign tmp_2_fu_252_p2 = ($signed(i_reg_155) < $signed(tmp_reg_433)? 1'b1: 1'b0);
assign tmp_3_fu_257_p2 = (i_reg_155 + wordInput_1_reg_421);
assign tmp_4_fu_262_p1 = $unsigned(tmp_3_fu_257_p2);
assign tmp_5_fu_379_p1 = $unsigned(tmp_1_reg_513);
assign tmp_6_fu_369_p2 = (i_1_reg_201 < pixelsN? 1'b1: 1'b0);
assign tmp_7_fu_312_p2 = (i_reg_155 + wordOutput_1_reg_427);
assign tmp_8_fu_317_p1 = $unsigned(tmp_7_fu_312_p2);
assign tmp_9_fu_400_p2 = (reg_213 ^ ap_const_lv32_FFFFFFFF);
assign tmp_fu_246_p2 = (pixelsN + ap_const_lv32_FFFFFFF0);
assign tmp_s_fu_307_p1 = $unsigned(j_reg_179);
assign wordInput_1_fu_228_p1 = $unsigned(wordInput_fu_218_p4);
assign wordInput_fu_218_p4 = {{ptrInput[ap_const_lv32_1F : ap_const_lv32_2]}};
assign wordOutput_1_fu_242_p1 = $unsigned(wordOutput_fu_232_p4);
assign wordOutput_fu_232_p4 = {{ptrOutput[ap_const_lv32_1F : ap_const_lv32_2]}};
always @ (posedge ap_clk)
begin
    wordInput_1_reg_421[31:30] <= 2'b00;
    wordOutput_1_reg_427[31:30] <= 2'b00;
end



endmodule //image_inverter

